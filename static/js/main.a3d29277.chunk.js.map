{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["User","props","name","react_default","a","createElement","TodoItem","completed","user","title","User_User_User","TodoList","todos","console","log","map","todo","TodoItem_TodoItem_TodoItem","Object","assign","key","id","BASE_URL","App","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isLoading","isLoaded","error","loadData","asyncToGenerator","regenerator_default","mark","_callee","_ref2","_ref3","todosResponse","usersResponse","users","todosWithUsers","wrap","_context","prev","next","setState","Promise","all","fetch","sent","slicedToArray","json","_ref4","userId","_objectSpread","objectWithoutProperties","find","_ref5","t0","message","stop","inherits","createClass","value","_this$state","TodoList_TodoList_TodoList","type","onClick","disabled","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a3d29277.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nexport const User = (props) => {\n  const { name } = props;\n\n  return (\n    <div>\n      <p>\n        {name}\n      </p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  name: PropTypes.string,\n  user: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}.isRequaired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoItem.css';\nimport { User } from '../User/User';\n\nexport const TodoItem = (props) => {\n  const { completed, user, title } = props;\n\n  return (\n    <li>\n      <h2>{title}</h2>\n      <p>{completed ? 'Done' : 'TODO'}</p>\n      <User {...user} />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  completed: PropTypes.string,\n  user: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}.isRequaired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = (props) => {\n  const { todos } = props;\n  console.log(typeof todos);\n\n  return (\n    <ul>\n      {todos.map(todo => (\n        <TodoItem key={todo.id} {...todo} />\n      ))}\n    </ul>\n  );\n};\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(shape).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    isLoading: false,\n    isLoaded: false,\n    error: null,\n  }\n\n  loadData = async() => {\n    this.setState({ isLoading: true });\n\n    try {\n      const [todosResponse, usersResponse] = await Promise.all([\n        fetch(`${BASE_URL}/todos`),\n        fetch(`${BASE_URL}/users`),\n      ]);\n      const todos = await todosResponse.json();\n      const users = await usersResponse.json();\n\n      const todosWithUsers = todos.map(({ userId, ...rest }) => ({\n        ...rest,\n        user: users.find(({ id }) => id === userId),\n      }));\n\n      console.log(todosWithUsers);\n\n      this.setState({\n        todos: todosWithUsers,\n        isLoaded: true,\n        isLoading: false,\n      });\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  render() {\n    const {\n      todos,\n      isLoading,\n      isLoaded,\n      error,\n    } = this.state;\n\n    if (!isLoaded) {\n      return (\n        <button\n          type=\"button\"\n          onClick={this.loadData}\n          disabled={isLoading}\n        >\n          {isLoading ? 'Getting...' : 'Get TODOs'}\n        </button>\n      );\n    }\n\n    if (error) {\n      return <p>{error}</p>;\n    }\n\n    return (\n      <TodoList todos={todos} />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}